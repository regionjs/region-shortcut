/// <reference types="react" />
import { Region } from 'region-core';
declare const region: Region;
export declare const set: (key: string, result: any, option?: import("region-core/lib/types/interfaces").LoadOption | undefined) => any, setBy: (key: string, option?: import("region-core/lib/types/interfaces").LoadOption | undefined) => (result: any) => any, reset: () => void, load: (key: string, asyncFunction: any, option?: import("region-core/lib/types/interfaces").LoadOption | undefined) => Promise<any>, loadBy: (key: string, asyncFunction: any, option?: import("region-core/lib/types/interfaces").LoadOption | undefined) => (params: any) => Promise<any>, connect: (key: import("region-core/lib/types/types").Key, { Loading, Error }?: import("region-core/lib/types/interfaces").ConnectOption | undefined) => (Display?: any) => ((ownProps: import("region-core/lib/types/interfaces").Props) => JSX.Element) | null, connectWith: (key: import("region-core/lib/types/types").Key, Display: any, option?: import("region-core/lib/types/interfaces").ConnectOption | undefined) => ((ownProps: import("region-core/lib/types/interfaces").Props) => JSX.Element) | null, useProps: (key: import("region-core/lib/types/types").Key) => import("region-core/lib/types/interfaces").Props, getProps: (key: import("region-core/lib/types/types").Key) => import("region-core/lib/types/interfaces").Props;
export { Region, region };
